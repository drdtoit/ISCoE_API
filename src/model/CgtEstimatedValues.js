/**
 * CGT calculator
 * Capital Gains Tax Calculator
 *
 * OpenAPI spec version: V1.1
 * Contact: name@momentum.co.za
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Money', 'model/Percentage'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Money'), require('./Percentage'));
  } else {
    // Browser globals (root is window)
    if (!root.CgtCalculator) {
      root.CgtCalculator = {};
    }
    root.CgtCalculator.CgtEstimatedValues = factory(root.CgtCalculator.ApiClient, root.CgtCalculator.Money, root.CgtCalculator.Percentage);
  }
}(this, function(ApiClient, Money, Percentage) {
  'use strict';




  /**
   * The CgtEstimatedValues model module.
   * @module model/CgtEstimatedValues
   * @version V1.1
   */

  /**
   * Constructs a new <code>CgtEstimatedValues</code>.
   * Todo
   * @alias module:model/CgtEstimatedValues
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>CgtEstimatedValues</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CgtEstimatedValues} obj Optional instance to populate.
   * @return {module:model/CgtEstimatedValues} The populated <code>CgtEstimatedValues</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('expected_cgt')) {
        obj['expected_cgt'] = Money.constructFromObject(data['expected_cgt']);
      }
      if (data.hasOwnProperty('annual_cgt_exclusion')) {
        obj['annual_cgt_exclusion'] = Money.constructFromObject(data['annual_cgt_exclusion']);
      }
      if (data.hasOwnProperty('other_cgt_for_tax_year')) {
        obj['other_cgt_for_tax_year'] = Money.constructFromObject(data['other_cgt_for_tax_year']);
      }
      if (data.hasOwnProperty('expected_income_tax_rate')) {
        obj['expected_income_tax_rate'] = Percentage.constructFromObject(data['expected_income_tax_rate']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Money} expected_cgt
   */
  exports.prototype['expected_cgt'] = undefined;
  /**
   * @member {module:model/Money} annual_cgt_exclusion
   */
  exports.prototype['annual_cgt_exclusion'] = undefined;
  /**
   * @member {module:model/Money} other_cgt_for_tax_year
   */
  exports.prototype['other_cgt_for_tax_year'] = undefined;
  /**
   * @member {module:model/Percentage} expected_income_tax_rate
   */
  exports.prototype['expected_income_tax_rate'] = undefined;



  return exports;
}));


